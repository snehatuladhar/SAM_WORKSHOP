# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Defines the event bus policies that determine who can create rules on the event bus to
  subscribe to events published by Unicorn Contracts Service.

Parameters:
  Stage:
    Type: String
    Default: local
    AllowedValues:
      - local
      - dev
      - prod

Resources:
  EventRegistry:
    Type: AWS::EventSchemas::Registry
    Properties:
      Description: 'Event schemas for Unicorn Contracts'
      RegistryName:
        Fn::Sub: "{{resolve:ssm:/uni-prop/UnicornContractsNamespace}}-${Stage}"

  EventRegistryPolicy:
    Type: AWS::EventSchemas::RegistryPolicy
    Properties:
      RegistryName:
        Fn::GetAtt: EventRegistry.RegistryName
      Policy:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowExternalServices
            Effect: Allow
            Principal:
              AWS:
                - Ref: AWS::AccountId
            Action:
              - schemas:DescribeCodeBinding
              - schemas:DescribeRegistry
              - schemas:DescribeSchema
              - schemas:GetCodeBindingSource
              - schemas:ListSchemas
              - schemas:ListSchemaVersions
              - schemas:SearchSchemas
            Resource:
              - Fn::GetAtt: EventRegistry.RegistryArn
              - Fn::Sub: "arn:${AWS::Partition}:schemas:${AWS::Region}:${AWS::AccountId}:schema/${EventRegistry.RegistryName}*"

  ContractStatusChangedEventSchema:
  Type: AWS::EventSchemas::Schema
  Properties:
    Type: 'OpenApi3'
    RegistryName:
      Fn::GetAtt: EventRegistry.RegistryName
    SchemaName:
      Fn::Sub: "${EventRegistry.RegistryName}@ContractStatusChanged"
    Description: 'The schema for a request to publish a property'
    Content:
      Fn::Sub: |
        {
          "openapi": "3.0.0",
          "info": {
            "version": "1.0.0",
            "title": "EventFromAws-dynamodb"
          },
          "paths": {},
          "components": {
            "schemas": {
              "AWSEvent": {
                "type": "object",
                "required": ["detail-type", "resources", "detail", "id", "source", "time", "region", "version", "account"],
                "x-amazon-events-detail-type": "Event from aws:dynamodb",
                "x-amazon-events-source": "Pipe dev1",
                "properties": {
                  "detail": {
                    "$ref": "#/components/schemas/EventFromAws-dynamodb"
                  },
                  "account": {
                    "type": "string"
                  },
                  "detail-type": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string"
                  },
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "source": {
                    "type": "string"
                  },
                  "time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              },
              "EventFromAws-dynamodb": {
                "type": "object",
                "required": ["S"],
                "properties": {
                  "S": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
